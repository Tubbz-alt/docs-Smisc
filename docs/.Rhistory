
LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response,
                        errorBar = list(height = LSD, width = 0.05)))

d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 8),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 4)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response,
                        errorBar = list(height = LSD, width = 0.05)))

anova(m)
anova(lm(response ~ Factor_1 * Factor_2, data = d))
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 7.5),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 4)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response,
                        errorBar = list(height = LSD, width = 0.05)))

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05)))

anova(lm(response ~ Factor_1 * Factor_2, data = d))
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 7.5),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 6)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05)))

set.seed(20)

d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 7.5),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 6)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05)))
set.seed(20)
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 7.5),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 5.5)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05)))

d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 7.5),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 5.5)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),))
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 7.5),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 5.5)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),))
args(interactionPlot)
with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = TRUE))

set.seed(20)
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 7.5),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 5.5)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = TRUE))

set.seed(20)
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 8),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 5.5)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = TRUE))

set.seed(2)
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 8),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 5.5)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = TRUE))

args(jitter)
?jitter
q()
n
library(Smisc)
set.seed(2)
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 8),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 5.5)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = list(factor = 0.5)))

?interactionPlot
interactionPlot
q()
n
library(Smisc)
search()
set.seed(2)
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 8),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 5.5)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = list(factor = 0.5)))

eb <- list(height=LSD, width=0.05)
eb
lapply(eb, is.numeric)
unlist(lapply(eb, is.numeric))
all(unlist(lapply(eb, is.numeric)))
q()
n
library(Smisc)
set.seed(2)
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 8),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 5.5)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = list(factor = 0.5)))

q()
n
library(Smisc)
example(interationPlot)
example(interactionPlot)
set.seed(2)
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 8),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 5.5)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = list(factor = 0.5)))

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = list(a = 0.1)))

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = list(amount = 0.1)))

args(jitter)
jitter(rnorm(5))
jitter(rnorm(5), factor = 7)
jitter(rep(0, 5), factor = 7)
jitter(rep(0, 5), factor = 1)
jitter(rep(0, 5), factor = 0.5)
with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = list(factor = 0.1)))

q()
n
set.seed(2)
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 8),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 5.5)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = list(factor = 0.1)))

library(Smisc)
with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = list(factor = 0.1)))
cells
xvals
length(xvals)
q()
Q
q()
n
library(Smisc)
set.seed(2)
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 8),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 5.5)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = list(factor = 0.1)))

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = list(factor = 2)))

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = list(factor = 0.5)))

set.seed(20)
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 8),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 5.5)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = list(factor = 0.2)))

example(interactionPlot)
set.seed(20)
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 8),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 5.5)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD * c(0.8, 1, 1.2, 1.3), width = 0.05),
                        jitterErrorBars = list(factor = 0.2)))

?jitter
with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD * c(0.8, 1, 1.2, 1.3), width = 0.05)))

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05)))

q()
n
library(Smisc)
set.seed(20
)
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 8),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 5.5)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD * c(0.8, 1, 1.2, 1.3), width = 0.05),
                        jitterErrorBars = list(factor = 0.2)))
with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05)))

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD * c(0.8, 1, 1.2, 1.3), width = 0.05),
                        jitterErrorBars = list(factor = 0.2)))

lenghts(list(a=1:2,b=1:3))
lengths(list(a=1:2,b=1:3))
all(lengths(list(a=1:2,b=1:3)) == 2)
q()
n
library(Smisc)
example(interactionPlot)
set.seed(20)
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 8),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 5.5)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD * c(0.8, 1, 1.2, 1.3), width = 0.05),
                        jitterErrorBars = list(factor = 0.2)))
with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05)))

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD * c(0.8, 1, 1.2, 1.3), width = 0.05),
                        jitterErrorBars = list(factor = 0.2)))
with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = list(factor = 0.2)))

set.seed(20)
d <- data.frame(Factor_1 = c(rep("a", 10), rep("b", 10)),
                Factor_2 = rep(c("c", "d"), each = 5),
                response = c(rnorm(5, mean = 5),
                             rnorm(5, mean = 8),
                             rnorm(5, mean = 7),
                             rnorm(5, mean = 5.5)))

MSE <- summary(lm(response ~ Factor_1 * Factor_2, data = d))$sigma^2

LSD <- qt(0.05 / 2, 16, lower.tail = FALSE) * sqrt(2 * MSE / 5)

with(d, interactionPlot(Factor_1, Factor_2, response, las = 1,
                        errorBar = list(height = LSD, width = 0.05),
                        jitterErrorBars = list(factor = 0.2)))

?interactionPlot
?hardCode
q()
n
library(Smisc)
?hardCode
?pcbinom
q()
n
library(Smisc)
?pcbinom
q()
n
library(Smisc)
?pcbinom
?plot.default
pcbinom
jj
?dkbinom
?pkbinom
q()
n
library(Smisc)
args(dbb <- 
)(
args(dbb)
fx <- dbb(0:10, 10, 0.2, 0.2)
plot(0:10, fx)

plot(0:10, dbb(0:10, 10, 0.5, 0.5))
plot(0:10, dbb(0:10, 10, 1, 1))
dbb(0:10, 10, 1, 1)
dbb(0:10, 10, 10, 10)
plot(0:10, dbb(0:10, 10, 10, 10))
plot(0:10, dbb(0:10, 10, 0.5, 0.5))
?plot.default
plot(0:10, dbb(0:10, 10, 0.5, 0.5), type = "h")
x <- 0:10
fx <- dbb(x, 10, 0.2, 0.2)
plot(x, fx, xlab = "x", ylab = "Prob(X = x)", type = "h")
points(x, fx, pch = 19, col = "Blue") 

x <- 0:10
fx <- dbb(x, 10, 0.8, 0.8)
plot(x, fx, xlab = "x", ylab = "Prob(X = x)", type = "h")
points(x, fx, pch = 19, col = "Blue") 

x <- 0:10
fx <- dbb(x, 10, 0.8, 0.8)
plot(x, fx, xlab = "x", ylab = "P(X = x)", type = "h", las = 1)
points(x, fx, pch = 19, col = "Blue") 

x <- 0:10
fx <- dbb(x, 10, 0.8, 0.8)
plot(x, fx, xlab = "x", ylab = "", type = "h", 
     las = 1, main = c("N = 10, u = 0.8, v = 0.8"), font.main = 1)
points(x, fx, pch = 19, col = "Blue") 

sum(fx)
x <- 0:10
fx <- dbb(x, 10, 0.95, 0.95)
plot(x, fx, xlab = "x", ylab = "", type = "h", 
     las = 1, main = c("N = 10, u = 0.8, v = 0.8"), font.main = 1)
points(x, fx, pch = 19, col = "Blue") 

x <- 0:10
fx <- dbb(x, 10, 0.95, 0.95)
plot(x, fx, xlab = "x", ylab = "P(X = x)", type = "h", 
     main = c("N = 10, u = 0.8, v = 0.8"), font.main = 1)
points(x, fx, pch = 19, col = "Blue") 

plotFun(function(x) dbeta(x, 0.95, 0.95), xlim=c(0,1))
dbeta(c(0,1), 0.95, 0.95)
dbeta(c(0,1), 0.5, 0.5)
dbeta(c(0.001,0.999), 0.5, 0.5)
plotFun(function(x) dbeta(x, 0.95, 0.95), xlim=c(0.000001,0.99999))
plotFun(function(x) dbeta(x, 0.95, 0.95), xlim=c(0.001,0.999))
plotFun(function(x) dbeta(x, 0.5, 0.5), xlim=c(0.001,0.999))
plotFun(list(function(x) dbeta(x, 0.5, 0.5), function(x) dbeta(x, 0.95, 0.95)), xlim=c(0.001,0.999))
plotFun(list(function(x) dbeta(x, 0.5, 0.5), function(x) dbeta(x, 0.95, 0.95)), xlim=c(0.001,0.999), ylim = c(0,2))
plotFun(list(function(x) dbeta(x, 0.5, 0.5), function(x) dbeta(x, 0.95, 0.95)), xlim=c(0.001,0.999), ylim = c(0.5,1.5))
plotFun(list(function(x) dbeta(x, 0.5, 0.5), function(x) dbeta(x, 0.95, 0.95)), xlim=c(0.001,0.999), ylim = c(0.5,1.5), legendLabels=c(0.5, 0.95))
plotFun(list(function(x) dbeta(x, 0.5, 0.5), function(x) dbeta(x, 0.95, 0.95)), xlim=c(0.001,0.999), ylim = c(0.5,1.5), legendLabels=c("0.5", "0.95"))
x <- 0:10
fx <- dbb(x, 10, 0.95, 0.95)
plot(x, fx, xlab = "x", ylab = "P(X = x)", type = "h", 
     main = c("N = 10, u = 0.95, v = 0.95"), font.main = 1)
points(x, fx, pch = 19, col = "Blue") 

args(dkbinom)
pkbinom(5, size = c(5, 7), prob = c(0.7, 0.3))
dkbinom(5, size = c(5, 7), prob = c(0.7, 0.3))
0 %% 1
2 %% 1
2.2 %% 1
q()
n
